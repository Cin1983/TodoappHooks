[{"C:\\Users\\hmsol\\OneDrive\\Bureaublad\\todoapphooks\\src\\App.js":"1","C:\\Users\\hmsol\\OneDrive\\Bureaublad\\todoapphooks\\src\\Components\\TodoList.js":"2","C:\\Users\\hmsol\\OneDrive\\Bureaublad\\todoapphooks\\src\\Components\\Todo.js":"3","C:\\Users\\hmsol\\OneDrive\\Bureaublad\\todoapphooks\\src\\Components\\Form.js":"4"},{"size":2953,"mtime":1608066802392,"results":"5","hashOfConfig":"6"},{"size":858,"mtime":1608041879573,"results":"7","hashOfConfig":"6"},{"size":865,"mtime":1608046267200,"results":"8","hashOfConfig":"6"},{"size":1256,"mtime":1608039462056,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"n565fw",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hmsol\\OneDrive\\Bureaublad\\todoapphooks\\src\\App.js",["19","20"],"import React, { useState, useEffect } from \"react\";\nimport TodoList from \"./Components/TodoList\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport Dates from \"./Components/Dates.json\";\nimport \"./App.css\";\n\n\nfunction App() {\n  // state stuff\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  const [value, setValue] = useState(new Date());\n  const [isHidden, setIsHidden] = useState(true);\n\n  //RUN ONCE with\n  // useEffect(() => {\n  //   getLocalTodos();\n  // }, []);\n  // USE EFFECT\n  // useEffect(() => {\n  //   filterHandler();\n  // }, [todos, status]);\n  // // FUNCTIONS\n\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n  // Save to Local\n  // const saveLocalTodos = () => {\n  //   localStorage.setitem(\"todos\", JSON.stringify(todos));\n  // };\n  // const getLocalTodos = () => {\n  //   if (localStorage.getItem(\"todos\") === null) {\n  //     localStorage.setItem(\"todos\", JSON.stringify([]));\n  //   } else {\n  //     let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n  //     setTodos(todoLocal);\n  //   }\n  // };\n\n  const formatDate = (date) => {\n    \n    return `${date.getMonth() + 1}-${date.getDate()}-${date.getFullYear()}`;\n  };\n\n  //  handlers\n  const onChange = (date) => {\n    setValue(date);\n  };\n\n  const clickHandler = (date) => {\n    if (formatDate(date) === formatDate(value)) setIsHidden(!setIsHidden);\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Hyacinthia's To do App!</h1>\n      </header>\n      \n      <TodoList\n        todos={todos}\n        setTodos={setTodos}\n        filteredTodos={filteredTodos}\n        isHidden={isHidden}\n        inputText={inputText}\n        setInputText={setInputText}\n        setStatus={setStatus}\n\n      />\n      \n      <Calendar\n        onChange={onChange}\n        value={value}\n        \n        tileContent={({ date }) => {\n          for (let i = 0; i < Dates.length; i++)\n            if (\n              `${\n                date.getMonth() + 1\n              }-${date.getDate()}-${date.getFullYear()}` === Dates[i].date\n            ) {\n              return Dates[i].name;\n            }\n        }}\n        tileClassName={({ date }) => {\n          for (let i = 0; i < Dates.length; i++)\n            if (\n              Dates[i].date ===\n              `${date.getMonth() + 1}-${date.getDate()}-${date.getFullYear()}`\n            ) {\n              return \"color\";\n            }\n        }}\n        onClickDay={clickHandler}\n      />\n    </div>\n  );\n}\n\nexport default App;\n\n","C:\\Users\\hmsol\\OneDrive\\Bureaublad\\todoapphooks\\src\\Components\\TodoList.js",[],"C:\\Users\\hmsol\\OneDrive\\Bureaublad\\todoapphooks\\src\\Components\\Todo.js",[],"C:\\Users\\hmsol\\OneDrive\\Bureaublad\\todoapphooks\\src\\Components\\Form.js",[],{"ruleId":"21","severity":1,"message":"22","line":1,"column":27,"nodeType":"23","messageId":"24","endLine":1,"endColumn":36},{"ruleId":"21","severity":1,"message":"25","line":29,"column":9,"nodeType":"23","messageId":"24","endLine":29,"endColumn":22},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'filterHandler' is assigned a value but never used."]