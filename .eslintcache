[{"C:\\Users\\hmsol\\OneDrive\\Bureaublad\\todoapphooks\\src\\App.js":"1","C:\\Users\\hmsol\\OneDrive\\Bureaublad\\todoapphooks\\src\\reportWebVitals.js":"2","C:\\Users\\hmsol\\OneDrive\\Bureaublad\\todoapphooks\\src\\Components\\Todoapp.js":"3","C:\\Users\\hmsol\\OneDrive\\Bureaublad\\todoapphooks\\src\\Components\\Form.js":"4","C:\\Users\\hmsol\\OneDrive\\Bureaublad\\todoapphooks\\src\\Components\\Todo.js":"5","C:\\Users\\hmsol\\OneDrive\\Bureaublad\\todoapphooks\\src\\index.js":"6"},{"size":1431,"mtime":1606404720406,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":584,"mtime":1606396051563,"results":"10","hashOfConfig":"8"},{"size":1232,"mtime":1606389389696,"results":"11","hashOfConfig":"8"},{"size":1559,"mtime":1606404018363,"results":"12","hashOfConfig":"8"},{"size":461,"mtime":1606394312427,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"n565fw",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hmsol\\OneDrive\\Bureaublad\\todoapphooks\\src\\App.js",["28","29"],"C:\\Users\\hmsol\\OneDrive\\Bureaublad\\todoapphooks\\src\\reportWebVitals.js",[],"C:\\Users\\hmsol\\OneDrive\\Bureaublad\\todoapphooks\\src\\Components\\Todoapp.js",[],"C:\\Users\\hmsol\\OneDrive\\Bureaublad\\todoapphooks\\src\\Components\\Form.js",["30"],"import React from \"react\";\r\n\r\nconst Form = ({ setInputText, todos, setTodos, inputText }) => {\r\n   \r\n    //Javascript and coding section\r\n   \r\n    const inputTextHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setInputText(e.target.value);\r\n    };\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([...todos, { text: inputText, completed: false, id: Math.random() * 1000 },]);\r\n        setInputText(\"\");\r\n       \r\n        return (\r\n            <form>\r\n                <input value={inputText} onChange={inputTextHandler} type=\"text\" classNameName=\"todo-input\" />\r\n                <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n                    <i className=\"fas fa-plus-square\"></i>\r\n                </button>\r\n                <div className=\"select\">\r\n                    <select name=\"todos\" className=\"filter-todo\">\r\n                        <option value=\"all\">All</option>\r\n                        <option value=\"completed\">Completed</option>\r\n                        <option value=\"uncompleted\">Uncompleted</option>\r\n                    </select>\r\n                </div>\r\n\r\n            </form>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Form;","C:\\Users\\hmsol\\OneDrive\\Bureaublad\\todoapphooks\\src\\Components\\Todo.js",["31"],"import React from \"react\";\r\n\r\nconst Todo = ({ text, todo, todos, setTodos }) => {\r\n    //Events\r\n    const deleteHandler = () => { setTodos(todos.filter((el) => el.id !== todos.id)) };\r\n  \r\n    const completeHandler = () => {\r\n        setTodos(todos.map((item) => {\r\n            if (item.id === todo.id)\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                }\r\n                \r\n               \r\n            // }\r\n            //     return item;\r\n        \r\n    \r\n        \r\n    \r\n    \r\n            const completeHandler = () => {\r\n                setTodos(todos.map(item => {\r\n                    if (item.id === todo.id) {\r\n                        return {\r\n                            ...item,\r\n                            completed: !item.completed,\r\n                        };\r\n                    }\r\n                    return item;\r\n                })\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div className=\"todo\">\r\n                    <li className={`todo-item ${todo.completed ? \"completed\" : ''}`}>{text}</li>\r\n                    <button onClick={completeHandler} className=\"complete-btn\">\r\n                        <i className=\"fas fa-check\"></i>\r\n                    </button>\r\n                    <button onClick={deleteHandler} className=\"trash-btn\">\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n                    ))\r\n                </div>\r\n       \r\n            )\r\n        }\r\n        \r\n    \r\n\r\n\r\n export default Todo","C:\\Users\\hmsol\\OneDrive\\Bureaublad\\todoapphooks\\src\\index.js",[],{"ruleId":"32","severity":1,"message":"33","line":13,"column":10,"nodeType":"34","messageId":"35","endLine":13,"endColumn":16},{"ruleId":"32","severity":1,"message":"36","line":13,"column":18,"nodeType":"34","messageId":"35","endLine":13,"endColumn":27},{"ruleId":"32","severity":1,"message":"37","line":18,"column":34,"nodeType":"34","messageId":"35","endLine":18,"endColumn":51},{"ruleId":null,"fatal":true,"severity":2,"message":"38","line":53,"column":2},"no-unused-vars","'status' is assigned a value but never used.","Identifier","unusedVar","'setStatus' is assigned a value but never used.","'submitTodoHandler' is assigned a value but never used.","Parsing error: 'import' and 'export' may only appear at the top level\n\n  51 | \n  52 | \n> 53 |  export default Todo\n     |  ^"]